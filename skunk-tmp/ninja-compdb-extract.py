#!/usr/bin/env python3
# ninja-compdb-extract.py
#
# Helper script for ghci-strategy.sh. It extracts commands for specific
# outputs from a compilation database file generated by "ninja -t compdb",
# and writes them to a new, standalone Ninja file on stdout.
#
# Usage: ninja-compdb-extract.py \
#    COMPDB OUTPUT-LIST-PART-1 OUTPUT-LIST-PART-2 ...
#

import json
import sys

compdb_file = sys.argv[1]

compdb = {}

with open(compdb_file, 'r', encoding='iso8859-1') as f:
	compdb_json = json.load(f)
	for rec in compdb_json:
		command = rec['command']
		output  = rec['output']
		compdb[output] = command

def ninja_escape(s):
	return s.replace('$', '$$').replace(':', '$:')

ninja_buf = []
target_output_list = []
part_num = 1
rule_num = 0

for output_list_file in sys.argv[2:]:
	target = f'part{part_num}'
	#m = re.match(r'([-\w]+):(.+)$', output_list_file)
	#if m:
	#	target = m.group(1)
	#	output_list_file = m.group(2)
	target_output_list.append({'target': target, 'output_list': []})
	with open(output_list_file, 'r') as f:
		for output in f:
			output = output.strip()
			target_output_list[-1]['output_list'].append(output)
			command = compdb.get(output)
			if command:
				command_esc = ninja_escape(command)
				deps = '\n  deps = msvc' \
					if ' /showIncludes ' in command else ''
				ninja_buf.append(f'rule r{rule_num:05}\n  command = {command_esc}\n  description = COMP {output}' + deps)
				ninja_buf.append(f'build {output}: r{rule_num:05}\n')
			else:
				print(f'warning: no command for {output}', file=sys.stderr)
			rule_num += 1
	part_num += 1

print('# Generated by ninja-compdb-extract.py')
print('#')
print('# Targets: ' + ' '.join([d['target'] for d in target_output_list]))
print('#\n')
print('\n'.join(ninja_buf))
for d in target_output_list:
	target = d['target']
	output_list = d['output_list']
	print(f'build {target}: ' + ' $\n    '.join(['phony'] + output_list) + '\n')
print('# EOF')

# end ninja-compdb-extract.py
