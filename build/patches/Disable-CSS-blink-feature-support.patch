From: uazo <uazo@users.noreply.github.com>
Date: Mon, 29 Jul 2024 06:48:25 +0000
Subject: Disable CSS blink-feature support

the function is not currently exposed to websites but is only allowed for testing.
disabled as it is an potentially advanced fingerprinting mechanism.
also fixed the possibility of using internal selectors for speculation rules.
see https://chromium-review.googlesource.com/c/chromium/src/+/5540782

License: GPL-2.0-or-later - https://spdx.org/licenses/GPL-2.0-or-later.html
---
 .../blink/renderer/core/css/parser/css_supports_parser.cc       | 2 +-
 .../renderer/core/speculation_rules/document_rule_predicate.cc  | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/third_party/blink/renderer/core/css/parser/css_supports_parser.cc b/third_party/blink/renderer/core/css/parser/css_supports_parser.cc
--- a/third_party/blink/renderer/core/css/parser/css_supports_parser.cc
+++ b/third_party/blink/renderer/core/css/parser/css_supports_parser.cc
@@ -227,7 +227,7 @@ bool CSSSupportsParser::ConsumeBlinkFeatureFn(CSSParserTokenStream& stream) {
             feature_name.Value().Utf8()) &&
         guard.Release()) {
       stream.ConsumeWhitespace();
-      return true;
+      return false;
     }
   }
   return false;
diff --git a/third_party/blink/renderer/core/speculation_rules/document_rule_predicate.cc b/third_party/blink/renderer/core/speculation_rules/document_rule_predicate.cc
--- a/third_party/blink/renderer/core/speculation_rules/document_rule_predicate.cc
+++ b/third_party/blink/renderer/core/speculation_rules/document_rule_predicate.cc
@@ -585,7 +585,7 @@ DocumentRulePredicate* DocumentRulePredicate::Parse(
     HeapVector<Member<StyleRule>> selectors;
     HeapVector<CSSSelector> arena;
     CSSPropertyValueSet* empty_properties =
-        ImmutableCSSPropertyValueSet::Create(nullptr, 0, kUASheetMode);
+        ImmutableCSSPropertyValueSet::Create(nullptr, 0, kHTMLStandardMode);
     CSSParserContext* css_parser_context =
         MakeGarbageCollected<CSSParserContext>(*execution_context);
     for (auto* raw_selector : raw_selectors) {
--
