From: uazo <uazo@users.noreply.github.com>
Date: Wed, 11 Oct 2023 09:40:53 +0000
Subject: Temp PerformanceNavigationTiming privacy fix

License: GPL-2.0-or-later - https://spdx.org/licenses/GPL-2.0-or-later.html
---
 .../renderer/core/timing/performance_navigation_timing.cc      | 2 ++
 .../blink/renderer/core/timing/performance_resource_timing.cc  | 3 ++-
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/third_party/blink/renderer/core/timing/performance_navigation_timing.cc b/third_party/blink/renderer/core/timing/performance_navigation_timing.cc
--- a/third_party/blink/renderer/core/timing/performance_navigation_timing.cc
+++ b/third_party/blink/renderer/core/timing/performance_navigation_timing.cc
@@ -32,6 +32,7 @@ using network::mojom::blink::NavigationDeliveryType;
 namespace {
 
 V8NavigationEntropy::Enum GetSystemEntropy(DocumentLoader* loader) {
+  if ((true)) return V8NavigationEntropy::Enum::kHigh;
   if (loader) {
     switch (loader->GetTiming().SystemEntropyAtNavigationStart()) {
       case mojom::blink::SystemEntropy::kHigh:
@@ -216,6 +217,7 @@ V8NavigationTimingType PerformanceNavigationTiming::type() const {
 }
 
 AtomicString PerformanceNavigationTiming::deliveryType() const {
+  if ((true)) return g_empty_atom;
   DocumentLoader* loader = GetDocumentLoader();
   if (!loader) {
     return GetDeliveryType();
diff --git a/third_party/blink/renderer/core/timing/performance_resource_timing.cc b/third_party/blink/renderer/core/timing/performance_resource_timing.cc
--- a/third_party/blink/renderer/core/timing/performance_resource_timing.cc
+++ b/third_party/blink/renderer/core/timing/performance_resource_timing.cc
@@ -136,7 +136,7 @@ AtomicString PerformanceResourceTiming::GetDeliveryType() const {
   }
   return info_->cache_state == mojom::blink::CacheState::kNone
              ? g_empty_atom
-             : delivery_type_names::kCache;
+             : g_empty_atom;
 }
 
 AtomicString PerformanceResourceTiming::deliveryType() const {
@@ -173,6 +173,7 @@ AtomicString PerformanceResourceTiming::GetNextHopProtocol(
     returnedProtocol = g_empty_atom;
   }
 
+  returnedProtocol = g_empty_atom;
   return returnedProtocol;
 }
 
--
