# To compile the mini-installer, a 7z archive of the browser has to be made.
# Google's 7z executable gets purged, so we have to use the system's 7z executable.
 
--- a/chrome/installer/mini_installer/BUILD.gn
+++ b/chrome/installer/mini_installer/BUILD.gn
@@ -192,7 +192,6 @@ action("mini_installer_archive") {
     "//chrome",
     "//chrome:chrome_dll",
     "//chrome/browser/extensions/default_extensions",
-    "//chrome/common/win:eventlog_provider",
     "//chrome/installer/setup",
     "//third_party/icu:icudata",
   ]
--- a/chrome/tools/build/win/create_installer_archive.py
+++ b/chrome/tools/build/win/create_installer_archive.py
@@ -224,12 +224,14 @@ def GenerateDiffPatch(options, orig_file
 
 
 def GetLZMAExec(build_dir):
-    executable = '7za'
-    if sys.platform == 'win32':
-        executable += '.exe'
+    # Taken from ungoogled-chromium's _extraction.py file, modified for Python 2
+    import winreg
+    sub_key_7zfm = 'SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\7zFM.exe'
 
-    return os.path.join(build_dir, "..", "..", "third_party", "lzma_sdk", "bin",
-                        "host_platform", executable)
+    with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, sub_key_7zfm) as key_handle:
+        sevenzipfm_dir = winreg.QueryValueEx(key_handle, 'Path')[0]
+
+    return os.path.join(sevenzipfm_dir, "7z.exe")
 
 
 def GetPrevVersion(build_dir, temp_dir, last_chrome_installer, output_name):
